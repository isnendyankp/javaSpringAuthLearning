# Application Configuration File
# Konsep: seperti .env file di Node.js untuk konfigurasi aplikasi

# ===== SERVER CONFIGURATION =====
# Port dimana server akan berjalan (default: 8080)
server.port=8080

# Context path - prefix untuk semua endpoints (optional)
# server.servlet.context-path=/api

# ===== APPLICATION INFO =====
spring.application.name=auth-learning

# ===== LOGGING CONFIGURATION =====
# Level logging untuk development
logging.level.com.example.auth=DEBUG
logging.level.org.springframework.web=DEBUG

# Pattern untuk log output
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%level] %logger{36} - %msg%n

# ===== DEVELOPMENT CONFIGURATION =====
# Enable debug mode untuk development
debug=false

# Show detailed error messages (hanya untuk development!)
server.error.include-message=always
server.error.include-stacktrace=on_param

# ===== FUTURE CONFIGURATIONS =====
# Ini akan digunakan nanti saat kita tambah database dan security

## Database Configuration (akan diaktifkan nanti)
# spring.datasource.url=jdbc:postgresql://localhost:5432/auth_learning_db
# spring.datasource.username=your_username
# spring.datasource.password=your_password
# spring.datasource.driver-class-name=org.postgresql.Driver

## JPA Configuration (akan diaktifkan nanti)
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

## JWT Configuration (akan diaktifkan nanti)
# jwt.secret=mySecretKey
# jwt.expiration=86400000